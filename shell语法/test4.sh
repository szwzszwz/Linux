#! /bin/bash

str="Hello World!"
# 求字符串长度
echo `expr length "$str"`  # 12
echo `expr index "$str" aWd` # 7
echo `expr substr "$str" 2 3` # 下标从1开始，返回从2开始长度为3的子串ell

# expr支持普通的算术操作，算术表达式优先级低于字符串表达式，高于逻辑关系表达式。
:<<i
+ -
加减运算。两端参数会转换为整数，如果转换失败则报错。
* / %
乘，除，取模运算。两端参数会转换为整数，如果转换失败则报错。
() 可以该表优先级，但需要用反斜杠转义
i

a=3
b=4

echo `expr $a + $b`  # 输出7
echo `expr $a - $b`  # 输出-1
echo `expr $a \* $b`  # 输出12，*需要转义
echo `expr $a / $b`  # 输出0，整除
echo `expr $a % $b` # 输出3
echo `expr \( $a + 1 \) \* \( $b + 1 \)`  # 输出20，值为(a + 1) * (b + 1)


:<<i
|
如果第一个参数非空且非0，则返回第一个参数的值，否则返回第二个参数的值，但要求第二个参数的值也是非空或非0，否则返回0。如果第一个参数是非空或非0时，不会计算第二个参数。
&
如果两个参数都非空且非0，则返回第一个参数，否则返回0。如果第一个参为0或为空，则不会计算第二个参数。
< <= = == != >= >
比较两端的参数，如果为true，则返回1，否则返回0。”==”是”=”的同义词。”expr”首先尝试将两端参数转换为整数，并做算术比较，如果转换失败，则按字符集排序规则做字符比较。
() 可以该表优先级，但需要用反斜杠转义
i
a=3
b=4

echo `expr $a \> $b`  # 输出0，>需要转义
echo `expr $a '<' $b`  # 输出1，也可以将特殊字符用引号引起来
echo `expr $a '>=' $b`  # 输出0
echo `expr $a \<\= $b`  # 输出1

c=0
d=5

echo `expr $c \& $d`  # 输出0
echo `expr $a \& $b`  # 输出3
echo `expr $c \| $d`  # 输出5
echo `expr $a \| $b`  # 输出3
